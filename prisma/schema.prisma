// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


enum UserRole{
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?
  email         String?   @unique
  adresse       String?
  phone         String?   
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  role          UserRole @default(USER)
  accounts      Account[]
  isTwoFactorEnable Boolean @default(false)
  twoFactorComfirmtion TowFactorConfirmation?
}

model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken{
  id String @id @default(cuid()) @map("_id")
  email String
  token String @unique
  expire DateTime

  @@unique([email, token])

}

model PasswordResetToken{
  id String @id @default(cuid()) @map("_id")
  email String
  token String @unique
  expire DateTime

  @@unique([email, token])
}


model TowFactorToken{
  id String @id @default(cuid()) @map("_id")
  email String
  token String @unique
  expire DateTime

  @@unique([email, token])
}

model TowFactorConfirmation{
  id String @id @default(cuid()) @map("_id")
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId])
}

model Category{
  id String  @id @default(cuid()) @map("_id")
  name String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt 
  
}


model MenuItems{
  id String @id @default(cuid()) @map("_id")
  image String
  name String
  description String
  basePrice String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}


